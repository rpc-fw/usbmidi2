diff -Naur Generated_Orig/Cpu.c Generated_Code/Cpu.c
--- Generated_Orig/Cpu.c	2015-05-17 11:55:39.625973833 +0200
+++ Generated_Code/Cpu.c	2015-05-17 11:56:39.088906599 +0200
@@ -92,7 +92,37 @@
 volatile uint8_t SR_reg;               /* Current value of the FAULTMASK register */
 volatile uint8_t SR_lock = 0x00U;      /* Lock */
 
+/* Save status register and disable interrupts */
+void EnterCritical()
+{
+  uint8_t SR_reg_local;
+  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */
+   __asm (
+   "MRS R0, PRIMASK\n\t"
+   "CPSID i\n\t"
+   "STRB R0, %[output]"
+   : [output] "=m" (SR_reg_local)
+   :: "r0");
+  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */
+   if (++SR_lock == 1u) {
+     SR_reg = SR_reg_local;
+   }
+}
 
+
+/* Restore status register  */
+void ExitCritical()
+{
+   if (--SR_lock == 0u) {
+  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */
+     __asm (
+       "ldrb r0, %[input]\n\t"
+       "msr PRIMASK,r0;\n\t"
+       ::[input] "m" (SR_reg)
+       : "r0");
+  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */
+   }
+ }
 /*
 ** ===================================================================
 **     Method      :  Cpu_INT_NMIInterrupt (component MKL26Z128FM4)
diff -Naur Generated_Orig/IFsh1.c Generated_Code/IFsh1.c
--- Generated_Orig/IFsh1.c	2015-05-17 11:55:39.625973833 +0200
+++ Generated_Code/IFsh1.c	2015-05-17 11:56:54.800624657 +0200
@@ -152,13 +152,13 @@
   if (IFsh1_CmdPending) {
     return ERR_BUSY;
   }
-  Result = ERR_OK;                     /* Suppose area is erased */
-  for (x=0U; x<Count; x++) {           /* Check if written area is erased */
-    if (((uint8_t*)Dst)[x] != 0xFFU) { /* Byte erased? */
+  //Result = ERR_OK;                     /* Suppose area is erased */
+  //for (x=0U; x<Count; x++) {           /* Check if written area is erased */
+  //  if (((uint8_t*)Dst)[x] != 0xFFU) { /* Byte erased? */
       Result = ERR_FAILED;             /* No, Erase is required */
-     break;
-    }
-  }
+  //   break;
+  //  }
+  //}
   if (Result == ERR_FAILED) {
     SectorAddress = Dst & ~(LDD_FLASH_TAddress)IntFlashLdd1_ERASABLE_UNIT_MASK;
     SectorOffset = Dst & IntFlashLdd1_ERASABLE_UNIT_MASK;
diff -Naur Generated_Orig/IntFlashLdd1.c Generated_Code/IntFlashLdd1.c
--- Generated_Orig/IntFlashLdd1.c	2015-05-17 11:55:39.625973833 +0200
+++ Generated_Code/IntFlashLdd1.c	2015-05-17 11:57:03.404470274 +0200
@@ -440,7 +440,7 @@
         PE_NOP();
         PE_NOP();
       }
-      IntFlashLdd1_OnError(DeviceDataPrv->UserDataPtr); /* Invoke the OnError event */
+      //IntFlashLdd1_OnError(DeviceDataPrv->UserDataPtr); /* Invoke the OnError event */
       return;                          /* End */
     }
     if (DeviceDataPrv->DataCounter == 0U) { /* If all the data has been successfully proceeded, finish the operation */
diff -Naur Generated_Orig/PE_Types.h Generated_Code/PE_Types.h
--- Generated_Orig/PE_Types.h	2015-05-17 11:55:39.625973833 +0200
+++ Generated_Code/PE_Types.h	2015-05-17 11:56:37.076942704 +0200
@@ -127,36 +127,11 @@
 
 
 /* Save status register and disable interrupts */
-#define EnterCritical() \
- do {\
-  uint8_t SR_reg_local;\
-  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\
-   __asm ( \
-   "MRS R0, PRIMASK\n\t" \
-   "CPSID i\n\t"            \
-   "STRB R0, %[output]"  \
-   : [output] "=m" (SR_reg_local)\
-   :: "r0");\
-  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\
-   if (++SR_lock == 1u) {\
-     SR_reg = SR_reg_local;\
-   }\
- } while(0)
+void EnterCritical();
 
  
 /* Restore status register  */
-#define ExitCritical() \
- do {\
-   if (--SR_lock == 0u) { \
-  /*lint -save  -e586 -e950 Disable MISRA rule (2.1,1.1) checking. */\
-     __asm (                 \
-       "ldrb r0, %[input]\n\t"\
-       "msr PRIMASK,r0;\n\t" \
-       ::[input] "m" (SR_reg)  \
-       : "r0");                \
-  /*lint -restore Enable MISRA rule (2.1,1.1) checking. */\
-   }\
- } while(0)
+void ExitCritical();
 
 
 #define PE_DEBUGHALT() \
